/*
 * Created on 2023-06-14 ( 09:06:03 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package duan.sportify.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;



import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * JPA entity class for "Bookings"
 *
 * @author Telosys
 *
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name="bookings", catalog="sportify" )
public class Bookings implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="bookingid", nullable=false)
    private Integer    bookingid ;

    //--- ENTITY DATA FIELDS 
    @Column(name="username", nullable=false, length=16)
    private String     username ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="bookingdate", nullable=false)
    private Date       bookingdate ;

    @Column(name="bookingprice", nullable=false)
    private Double     bookingprice ;

    @Column(name="phone", nullable=false, length=10)
    private String     phone ;

    @Column(name="note", length=200)
    private String     note ;

    @Column(name="bookingstatus", nullable=false, length=16)
    private String     bookingstatus ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @JsonIgnore
    @OneToMany(mappedBy="bookings")
    private List<Bookingdetails> listOfBookingdetails ; 

    @ManyToOne
    @JoinColumn(name="username", referencedColumnName="username", insertable=false, updatable=false)
    private Users      users ; 


    

}
