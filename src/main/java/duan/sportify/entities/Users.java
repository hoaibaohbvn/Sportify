/*
 * Created on 2023-05-31 ( 14:37:07 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package duan.sportify.entities;

import java.io.Serializable;

import java.util.List;
import jakarta.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * JPA entity class for "Users"
 *
 * @author Telosys
 *
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name="users", catalog="sportify" )
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @Column(name="username", nullable=false, length=16)
    private String     username ;

    //--- ENTITY DATA FIELDS 
    @Column(name="passwords", nullable=false, length=16)
    private String     passwords ;

    @Column(name="firstName", nullable=false, length=50)
    private String     firstname ;

    @Column(name="lastName", nullable=false, length=50)
    private String     lastname ;

    @Column(name="phone", nullable=false, length=10)
    private String     phone ;

    @Column(name="email", nullable=false, length=50)
    private String     email ;

    @Column(name="address", nullable=false, length=100)
    private String     address ;

    @Column(name="image", length=50)
    private String     image ;

    @Column(name="gender", nullable=false)
    private Boolean    gender ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @OneToMany(mappedBy="users")
    private List<Authorized> listOfAuthorized ; 

    @OneToMany(mappedBy="users")
    private List<Cancelorders> listOfCancelorders ; 

    @OneToMany(mappedBy="users")
    private List<Bookings> listOfBookings ; 

    @OneToMany(mappedBy="users")
    private List<Cancelbooking> listOfCancelbooking ; 

    @OneToMany(mappedBy="users")
    private List<Teamdetails> listOfTeamdetails ; 

    @OneToMany(mappedBy="users")
    private List<Orders> listOfOrders ; 

    @OneToMany(mappedBy="users")
    private List<Favoritefield> listOfFavoritefield ; 

    @OneToMany(mappedBy="users")
    private List<Teams> listOfTeams ; 


    

}
