/*
 * Created on 2023-06-06 ( 15:20:49 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package duan.sportify.entities;

import java.io.Serializable;
import jakarta.persistence.*;

/**
 * JPA entity class for "Favoritefield"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="favoritefield", catalog="sportify" )
public class Favoritefield implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="favoriteID", nullable=false)
    private Integer    favoriteid ;

    //--- ENTITY DATA FIELDS 
    @Column(name="fieldID", nullable=false)
    private Integer    fieldid ;

    @Column(name="username", nullable=false, length=16)
    private String     username ;

    @Column(name="statusFavorite", nullable=false)
    private Boolean    statusfavorite ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne
    @JoinColumn(name="username", referencedColumnName="username", insertable=false, updatable=false)
    private Users      users ; 

    @ManyToOne
    @JoinColumn(name="fieldID", referencedColumnName="fieldID", insertable=false, updatable=false)
    private Fields     fields ; 


    /**
     * Constructor
     */
    public Favoritefield() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setFavoriteid( Integer favoriteid ) {
        this.favoriteid = favoriteid ;
    }
    public Integer getFavoriteid() {
        return this.favoriteid;
    }

    public void setFieldid( Integer fieldid ) {
        this.fieldid = fieldid ;
    }
    public Integer getFieldid() {
        return this.fieldid;
    }

    public void setUsername( String username ) {
        this.username = username ;
    }
    public String getUsername() {
        return this.username;
    }

    public void setStatusfavorite( Boolean statusfavorite ) {
        this.statusfavorite = statusfavorite ;
    }
    public Boolean getStatusfavorite() {
        return this.statusfavorite;
    }

    //--- GETTERS FOR LINKS
    public Users getUsers() {
        return this.users;
    } 

    public Fields getFields() {
        return this.fields;
    } 

    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(favoriteid);
        sb.append("|");
        sb.append(fieldid);
        sb.append("|");
        sb.append(username);
        sb.append("|");
        sb.append(statusfavorite);
        return sb.toString(); 
    } 

}
